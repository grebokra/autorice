---
- block:
    - name: Ensure required repos present and enabled
      zypper_repository:
        name: 'X11:Utilities'
        repo: 'https://download.opensuse.org/repositories/X11:/Utilities/openSUSE_Tumbleweed/'
        state: present
        auto_import_keys: true
        runrefresh: true
      tags: packages
      become: yes
 
    - name: Ensure required packages installed
      zypper:
        name: "{{ opensuse_desktop_packages }}" 
        state: present
      tags: packages
      become: yes
  when: ansible_distribution == "openSUSE Tumbleweed"

- block:
    - name: Ensure desktop_user exists
      getent:
        database: passwd
        key: "{{ desktop_user }}"
      tags: check
      become: yes

    #FIXME let's assume user homedir is /home/user
    - name: Stat home directory
      stat:
        path: "/home/{{ desktop_user }}"
      register: home_directory
      tags: check

    - name: Fail if home directory doesn't exist
      fail:
        msg: "Whoops! Seems like home directory of desktop user does not exist. Can't continue :("
      when: not home_directory.stat.exists
      tags: check

    - name: Ensure .config directory exists
      file:
        path: "/home/{{ desktop_user }}/.config"
        state: directory
      tags: check

    - name: Ensure i3 config directory created
      file:
        path: "/home/{{ desktop_user }}/.config/i3"
        state: directory
      tags: desktop

    - name: Ensure i3 config set
      template:
        src: i3_config.j2
        dest: "/home/{{ desktop_user }}/.config/i3/config"
      tags: desktop

    - name: Enable pipewire-pulse socket and service
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        scope: user
      tags: desktop
      with_items:
        - pipewire-pulse.socket
        - pipewire-pulse.service

    - name: Mask and disable display-manager service
      systemd:
        name: display-manager.service
        enabled: no
        masked: yes
      tags: desktop
      become: yes

    - name: Set .xinitrc
      template:
        src: xinitrc.j2
        dest: "/home/{{desktop_user}}/.xinitrc"
      tags: desktop

    - name: Set profile
      template:
        src: bash_profile.j2
        dest: "/home/{{ desktop_user }}/.bash_profile"
      tags: non-essential

    - name: Ensure dunst config directory created
      file:
        path: "/home/{{ desktop_user }}/.config/dunst"
        state: directory
      tags: desktop

    - name: Set dunst configuration
      template:
        src: dunstrc.j2
        dest: "/home/{{ desktop_user }}/.config/dunst/dunstrc"
      tags: desktop

    - name: Ensure sakura config directory created
      file:
        path: "/home/{{ desktop_user }}/.config/sakura"
        state: directory
      tags: desktop

    - name: Set sakura configuration
      template:
        src: sakura.conf.j2
        dest: "/home/{{ desktop_user }}/.config/sakura/sakura.conf"
      tags: desktop

    - name: Set tmux configuration
      template:
        src: tmux.conf.j2
        dest: /etc/tmux.conf
      tags: desktop

    - name: Set vim configuration
      template:
        src: vimrc.j2
        dest: "/home/{{ desktop_user }}/.vimrc"
      tags: desktop

    - name: Set Xorg keyboard config
      template:
        src: 00-keyboard.conf.j2
        dest: /etc/X11/xorg.conf.d/00-keyboard.conf
      tags: desktop
      become: yes

    - name: Set Xorg intel video config
      template:
        src: 20-intel.conf.j2
        dest: /etc/X11/xorg.conf.d/20-intel.conf
      tags: desktop-non-essential
      become: yes

    - name: Set usev rule for intel_backlight
      template:
        src: udev_backlight.rules.j2
        dest: /etc/udev/rules.d/backlight.rules
      tags: desktop-non-essential
      become: yes

    - name: Check if crypttab exists
      stat:
        path: /etc/crypttab
      register: crypttab
      become: yes

    - name: Add 'discard' option to crypttab if crypttab exists
      lineinfile:
        path: /etc/crypttab
        regexp: '^(cr_root(?!.*,discard).*)$'
        line: '\1,discard'
        backrefs: yes
      when: crypttab.stat.exists
      notify: Regenerate initramfs
      become: yes

    - name: Add user to video group
      user:
        name: "{{ desktop_user }}"
        groups: video
        append: yes
      tags: desktop
      become: yes

